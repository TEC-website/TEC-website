name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/tec-web:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/tec-web:${{ github.sha }}
        
    - name: Set up environment files
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.production
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.production
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env.production
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env.production
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.development
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.development
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.development
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env.development
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env.development
        fi

    - name: Upload environment file to VM
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          ENV_FILE=".env.production"
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          ENV_FILE=".env.development"
        fi

        sshpass -p "${SSH_PASSWORD}" scp -o StrictHostKeyChecking=no $ENV_FILE $SSH_USERNAME@$SSH_HOST:/home/alwyzon/$ENV_FILE

    - name: Deploy to VM
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        if [ "${BRANCH_NAME}" == "main" ]; then
          PORT=8000
          CONTAINER_NAME=tec-web
        elif [ "${BRANCH_NAME}" == "dev" ]; then
          PORT=8008
          CONTAINER_NAME=tec-web-dev
        fi

        sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << EOF
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tec-web:${{ github.sha }}
          sudo docker stop $CONTAINER_NAME || true
          sudo docker rm $CONTAINER_NAME || true
          sudo docker run -d --name $CONTAINER_NAME -p $PORT:8000 ${{ secrets.DOCKER_USERNAME }}/tec-web:${{ github.sha }}
        EOF
